// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230701134559_init4")]
    partial class init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Authentication", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("UserId");

                    b.ToTable("Authentications");
                });

            modelBuilder.Entity("backend.Models.Organisation", b =>
                {
                    b.Property<string>("OrganistationId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("organisation_id");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("about");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("organisation_name");

                    b.Property<string>("TermsAndCondition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("terms_and_condition");

                    b.HasKey("OrganistationId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("backend.Models.Service", b =>
                {
                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("service_id");

                    b.Property<int?>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("service_name");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit")
                        .HasColumnName("isPremium");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
